stipulation/battle_play/branch$(OBJ_SUFFIX): stipulation/battle_play/branch.c \
 stipulation/battle_play/branch.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/structure_traversal.h \
 stipulation/traversal.h stipulation/slice_insertion.h stipulation/pipe.h \
 stipulation/move_inverter.h stipulation/conditional_pipe.h \
 stipulation/constraint.h solving/moves_traversal.h stipulation/proxy.h \
 stipulation/branch.h stipulation/fork.h stipulation/move.h \
 stipulation/move_played.h stipulation/binary.h \
 stipulation/boolean/true.h stipulation/battle_play/attack_adapter.h \
 stipulation/battle_play/defense_adapter.h stipulation/modifier.h \
 solving/pipe.h solving/machinery/solve.h solving/machinery/dispatch.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h solving/ply.h \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 debugging/assert.h
stipulation/battle_play/branch.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/structure_traversal.h:
stipulation/traversal.h:
stipulation/slice_insertion.h:
stipulation/pipe.h:
stipulation/move_inverter.h:
stipulation/conditional_pipe.h:
stipulation/constraint.h:
solving/moves_traversal.h:
stipulation/proxy.h:
stipulation/branch.h:
stipulation/fork.h:
stipulation/move.h:
stipulation/move_played.h:
stipulation/binary.h:
stipulation/boolean/true.h:
stipulation/battle_play/attack_adapter.h:
stipulation/battle_play/defense_adapter.h:
stipulation/modifier.h:
solving/pipe.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
debugging/assert.h:
stipulation/battle_play/attack_adapter$(OBJ_SUFFIX): \
 stipulation/battle_play/attack_adapter.c \
 stipulation/battle_play/attack_adapter.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum pieces/pieces.h output/mode.h output/mode.enum.h \
 output/mode.enum stipulation/branch.h stipulation/slice_insertion.h \
 stipulation/battle_play/branch.h \
 stipulation/battle_play/defense_adapter.h stipulation/pipe.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h solving/ply.h \
 debugging/assert.h
stipulation/battle_play/attack_adapter.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/branch.h:
stipulation/slice_insertion.h:
stipulation/battle_play/branch.h:
stipulation/battle_play/defense_adapter.h:
stipulation/pipe.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/assert.h:
stipulation/battle_play/defense_adapter$(OBJ_SUFFIX): \
 stipulation/battle_play/defense_adapter.c \
 stipulation/battle_play/defense_adapter.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum pieces/pieces.h output/mode.h output/mode.enum.h \
 output/mode.enum stipulation/pipe.h stipulation/branch.h \
 stipulation/battle_play/branch.h stipulation/slice_insertion.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h solving/ply.h \
 debugging/assert.h
stipulation/battle_play/defense_adapter.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/pipe.h:
stipulation/branch.h:
stipulation/battle_play/branch.h:
stipulation/slice_insertion.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/assert.h:
