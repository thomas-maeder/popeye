output/plaintext/plaintext$(OBJ_SUFFIX): output/plaintext/plaintext.c \
 output/plaintext/plaintext.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum output/output.h \
 output/plaintext/condition.h output/plaintext/pieces.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h output/plaintext/position.h \
 output/plaintext/protocol.h output/plaintext/tree/tree.h \
 output/plaintext/line/line.h output/plaintext/end_of_phase_writer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h conditions/mummer.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h conditions/republican.h \
 conditions/bgl.h conditions/kobul.h conditions/imitator.h \
 conditions/singlebox/type1.h pieces/walks/pawns/en_passant.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 pieces/walks/classification.h stipulation/pipe.h solving/pipe.h \
 debugging/assert.h
output/plaintext/plaintext.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/output.h:
output/plaintext/condition.h:
output/plaintext/pieces.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
output/plaintext/position.h:
output/plaintext/protocol.h:
output/plaintext/tree/tree.h:
output/plaintext/line/line.h:
output/plaintext/end_of_phase_writer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
output/plaintext/language_dependant.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
conditions/republican.h:
conditions/bgl.h:
conditions/kobul.h:
conditions/imitator.h:
conditions/singlebox/type1.h:
pieces/walks/pawns/en_passant.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
pieces/walks/classification.h:
stipulation/pipe.h:
solving/pipe.h:
debugging/assert.h:
output/plaintext/end_of_phase_writer$(OBJ_SUFFIX): \
 output/plaintext/end_of_phase_writer.c \
 output/plaintext/end_of_phase_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h output/plaintext/plaintext.h output/output.h \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/pipe.h
output/plaintext/end_of_phase_writer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
output/plaintext/plaintext.h:
output/output.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/pipe.h:
output/plaintext/illegal_selfcheck_writer$(OBJ_SUFFIX): \
 output/plaintext/illegal_selfcheck_writer.c \
 output/plaintext/illegal_selfcheck_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h output/plaintext/message.h output/message.h \
 input/plaintext/language.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum solving/pipe.h
output/plaintext/illegal_selfcheck_writer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
solving/pipe.h:
output/plaintext/move_inversion_counter$(OBJ_SUFFIX): \
 output/plaintext/move_inversion_counter.c \
 output/plaintext/move_inversion_counter.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/pipe.h debugging/assert.h
output/plaintext/move_inversion_counter.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/pipe.h:
debugging/assert.h:
output/plaintext/ohneschach_detect_undecidable_goal$(OBJ_SUFFIX): \
 output/plaintext/ohneschach_detect_undecidable_goal.c \
 output/plaintext/ohneschach_detect_undecidable_goal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum conditions/ohneschach.h \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 solving/pipe.h
output/plaintext/ohneschach_detect_undecidable_goal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
conditions/ohneschach.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
solving/pipe.h:
output/plaintext/goal_writer$(OBJ_SUFFIX): output/plaintext/goal_writer.c \
 output/plaintext/goal_writer.h stipulation/goals/goals.h \
 position/board.h utilities/bitmask.h utilities/boolean.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum pieces/pieces.h output/mode.h output/mode.enum.h \
 output/mode.enum solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 output/plaintext/protocol.h output/plaintext/tree/tree.h \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 solving/pipe.h debugging/assert.h
output/plaintext/goal_writer.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
output/plaintext/protocol.h:
output/plaintext/tree/tree.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
solving/pipe.h:
debugging/assert.h:
output/plaintext/language_dependant$(OBJ_SUFFIX): \
 output/plaintext/language_dependant.c \
 output/plaintext/language_dependant.h pieces/pieces.h \
 utilities/boolean.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h conditions/conditions.h options/options.h \
 input/plaintext/twin.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum output/mode.h \
 output/mode.enum.h output/mode.enum input/plaintext/token.h \
 input/plaintext/language.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h debugging/assert.h
output/plaintext/language_dependant.h:
pieces/pieces.h:
utilities/boolean.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
debugging/assert.h:
output/plaintext/condition$(OBJ_SUFFIX): output/plaintext/condition.c \
 output/plaintext/condition.h utilities/boolean.h output/output.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h conditions/mummer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h output/plaintext/pieces.h \
 input/plaintext/condition.h pieces/walks/pawns/promotee_sequence.h \
 pieces/attributes/chameleon.h conditions/annan.h conditions/bgl.h \
 conditions/bolero.h conditions/breton.h conditions/circe/april.h \
 conditions/circe/rex_inclusive.h conditions/circe/chameleon.h \
 conditions/dister.h conditions/football.h conditions/geneva.h \
 conditions/grid.h conditions/imitator.h conditions/immune.h \
 conditions/isardam.h conditions/kobul.h conditions/koeko/anti.h \
 conditions/koeko/koeko.h conditions/madrasi.h conditions/magic_square.h \
 conditions/marscirce/marscirce.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h \
 conditions/marscirce/anti.h conditions/marscirce/phantom.h \
 conditions/messigny.h conditions/oscillating_kings.h \
 conditions/protean.h conditions/republican.h conditions/sat.h \
 conditions/singlebox/type1.h \
 conditions/transmuting_kings/vaulting_kings.h conditions/woozles.h \
 conditions/role_exchange.h pieces/walks/hunters.h debugging/assert.h
output/plaintext/condition.h:
utilities/boolean.h:
output/output.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/plaintext/language_dependant.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
output/plaintext/pieces.h:
input/plaintext/condition.h:
pieces/walks/pawns/promotee_sequence.h:
pieces/attributes/chameleon.h:
conditions/annan.h:
conditions/bgl.h:
conditions/bolero.h:
conditions/breton.h:
conditions/circe/april.h:
conditions/circe/rex_inclusive.h:
conditions/circe/chameleon.h:
conditions/dister.h:
conditions/football.h:
conditions/geneva.h:
conditions/grid.h:
conditions/imitator.h:
conditions/immune.h:
conditions/isardam.h:
conditions/kobul.h:
conditions/koeko/anti.h:
conditions/koeko/koeko.h:
conditions/madrasi.h:
conditions/magic_square.h:
conditions/marscirce/marscirce.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
conditions/marscirce/anti.h:
conditions/marscirce/phantom.h:
conditions/messigny.h:
conditions/oscillating_kings.h:
conditions/protean.h:
conditions/republican.h:
conditions/sat.h:
conditions/singlebox/type1.h:
conditions/transmuting_kings/vaulting_kings.h:
conditions/woozles.h:
conditions/role_exchange.h:
pieces/walks/hunters.h:
debugging/assert.h:
output/plaintext/position$(OBJ_SUFFIX): output/plaintext/position.c \
 output/plaintext/position.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h position/castling_rights.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 output/mode.enum output/plaintext/plaintext.h output/output.h \
 output/plaintext/protocol.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h conditions/mummer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h output/plaintext/condition.h \
 output/plaintext/pieces.h output/plaintext/stipulation.h \
 output/plaintext/sstipulation.h output/plaintext/stdio.h \
 input/plaintext/problem.h options/maxthreatlength.h \
 options/maxflightsquares.h options/nontrivial.h conditions/grid.h \
 conditions/imitator.h pieces/attributes/neutral/neutral.h \
 pieces/attributes/total_invisible.h \
 pieces/attributes/total_invisible/goal_validation.h \
 pieces/walks/classification.h pieces/walks/hunters.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/castling.h solving/move_generator.h debugging/measure.h \
 solving/proofgames.h solving/pipe.h stipulation/pipe.h \
 stipulation/branch.h debugging/assert.h
output/plaintext/position.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/plaintext/plaintext.h:
output/output.h:
output/plaintext/protocol.h:
output/plaintext/language_dependant.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
output/plaintext/condition.h:
output/plaintext/pieces.h:
output/plaintext/stipulation.h:
output/plaintext/sstipulation.h:
output/plaintext/stdio.h:
input/plaintext/problem.h:
options/maxthreatlength.h:
options/maxflightsquares.h:
options/nontrivial.h:
conditions/grid.h:
conditions/imitator.h:
pieces/attributes/neutral/neutral.h:
pieces/attributes/total_invisible.h:
pieces/attributes/total_invisible/goal_validation.h:
pieces/walks/classification.h:
pieces/walks/hunters.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/castling.h:
solving/move_generator.h:
debugging/measure.h:
solving/proofgames.h:
solving/pipe.h:
stipulation/pipe.h:
stipulation/branch.h:
debugging/assert.h:
output/plaintext/pieces$(OBJ_SUFFIX): output/plaintext/pieces.c \
 output/plaintext/pieces.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h position/castling_rights.h \
 output/output.h output/mode.h output/mode.enum.h output/mode.enum \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h conditions/mummer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h output/plaintext/protocol.h \
 pieces/attributes/total_invisible.h \
 pieces/attributes/total_invisible/goal_validation.h \
 pieces/attributes/neutral/neutral.h pieces/walks/classification.h \
 pieces/walks/hunters.h solving/observation.h solving/temporary_hacks.h \
 solving/fork.h debugging/assert.h
output/plaintext/pieces.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
output/output.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/plaintext/language_dependant.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
output/plaintext/protocol.h:
pieces/attributes/total_invisible.h:
pieces/attributes/total_invisible/goal_validation.h:
pieces/attributes/neutral/neutral.h:
pieces/walks/classification.h:
pieces/walks/hunters.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
debugging/assert.h:
output/plaintext/twinning$(OBJ_SUFFIX): output/plaintext/twinning.c \
 output/plaintext/twinning.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 output/plaintext/protocol.h output/plaintext/pieces.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h output/output.h output/plaintext/condition.h \
 output/plaintext/stipulation.h output/plaintext/sstipulation.h \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 output/plaintext/language_dependant.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h input/plaintext/token.h \
 conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/plaintext.h input/plaintext/stipulation.h \
 solving/pipe.h solving/duplex.h stipulation/pipe.h debugging/assert.h
output/plaintext/twinning.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/plaintext/protocol.h:
output/plaintext/pieces.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
output/output.h:
output/plaintext/condition.h:
output/plaintext/stipulation.h:
output/plaintext/sstipulation.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
output/plaintext/language_dependant.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/plaintext.h:
input/plaintext/stipulation.h:
solving/pipe.h:
solving/duplex.h:
stipulation/pipe.h:
debugging/assert.h:
output/plaintext/message$(OBJ_SUFFIX): output/plaintext/message.c \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 output/plaintext/protocol.h output/plaintext/plaintext.h output/output.h \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 platform/timer.h platform/maxmem.h platform/platform.h \
 stipulation/pipe.h solving/pipe.h
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/plaintext/protocol.h:
output/plaintext/plaintext.h:
output/output.h:
output/plaintext/language_dependant.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
platform/timer.h:
platform/maxmem.h:
platform/platform.h:
stipulation/pipe.h:
solving/pipe.h:
output/plaintext/stdio$(OBJ_SUFFIX): output/plaintext/stdio.c \
 output/plaintext/stdio.h utilities/boolean.h
output/plaintext/stdio.h:
utilities/boolean.h:
output/plaintext/protocol$(OBJ_SUFFIX): output/plaintext/protocol.c \
 output/plaintext/protocol.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 output/plaintext/stdio.h output/plaintext/stipulation.h \
 output/plaintext/sstipulation.h
output/plaintext/protocol.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/plaintext/stdio.h:
output/plaintext/stipulation.h:
output/plaintext/sstipulation.h:
output/plaintext/problem$(OBJ_SUFFIX): output/plaintext/problem.c \
 output/plaintext/problem.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 output/plaintext/protocol.h output/plaintext/position.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h output/plaintext/twinning.h solving/pipe.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h stipulation/slice_insertion.h solving/incomplete.h \
 debugging/assert.h
output/plaintext/problem.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
output/plaintext/protocol.h:
output/plaintext/position.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
output/plaintext/twinning.h:
solving/pipe.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
stipulation/slice_insertion.h:
solving/incomplete.h:
debugging/assert.h:
output/plaintext/stipulation$(OBJ_SUFFIX): output/plaintext/stipulation.c \
 output/plaintext/stipulation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum input/plaintext/goal.h \
 solving/pipe.h solving/machinery/solve.h solving/machinery/dispatch.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h solving/ply.h \
 solving/machinery/slack_length.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h debugging/assert.h
output/plaintext/stipulation.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/goal.h:
solving/pipe.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/machinery/slack_length.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
debugging/assert.h:
output/plaintext/sstipulation$(OBJ_SUFFIX): output/plaintext/sstipulation.c \
 output/plaintext/sstipulation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 output/plaintext/protocol.h output/plaintext/language_dependant.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h conditions/conditions.h options/options.h \
 input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/language.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h stipulation/branch.h \
 debugging/assert.h
output/plaintext/sstipulation.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/plaintext/protocol.h:
output/plaintext/language_dependant.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
stipulation/branch.h:
debugging/assert.h:
output/plaintext/constraint_writer$(OBJ_SUFFIX): \
 output/plaintext/constraint_writer.c \
 output/plaintext/constraint_writer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 output/plaintext/protocol.h output/plaintext/tree/tree.h \
 output/plaintext/message.h output/message.h input/plaintext/language.h \
 solving/pipe.h debugging/assert.h
output/plaintext/constraint_writer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
output/plaintext/protocol.h:
output/plaintext/tree/tree.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
solving/pipe.h:
debugging/assert.h:
