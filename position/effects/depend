position/effects/board_transformation$(OBJ_SUFFIX): \
 position/effects/board_transformation.c \
 position/effects/board_transformation.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h \
 pieces/walks/pawns/en_passant.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h debugging/assert.h
position/effects/board_transformation.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
pieces/walks/pawns/en_passant.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
debugging/assert.h:
position/effects/flags_change$(OBJ_SUFFIX): position/effects/flags_change.c \
 position/effects/flags_change.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/flags_change.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/king_square$(OBJ_SUFFIX): position/effects/king_square.c \
 position/effects/king_square.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_effect_journal.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h \
 conditions/actuated_revolving_centre.h solving/pipe.h debugging/assert.h
position/effects/king_square.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_effect_journal.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
conditions/actuated_revolving_centre.h:
solving/pipe.h:
debugging/assert.h:
position/effects/null_move$(OBJ_SUFFIX): position/effects/null_move.c \
 position/effects/null_move.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/effects/piece_removal.h
position/effects/null_move.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/effects/piece_removal.h:
position/effects/piece_creation$(OBJ_SUFFIX): position/effects/piece_creation.c \
 position/effects/piece_creation.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/piece_creation.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/piece_exchange$(OBJ_SUFFIX): position/effects/piece_exchange.c \
 position/effects/piece_exchange.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/piece_exchange.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/piece_movement$(OBJ_SUFFIX): position/effects/piece_movement.c \
 position/effects/piece_movement.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/piece_movement.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/piece_readdition$(OBJ_SUFFIX): position/effects/piece_readdition.c \
 position/effects/piece_readdition.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/piece_readdition.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/piece_removal$(OBJ_SUFFIX): position/effects/piece_removal.c \
 position/effects/piece_removal.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/piece_removal.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/side_change$(OBJ_SUFFIX): position/effects/side_change.c \
 position/effects/side_change.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/side_change.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/walk_change$(OBJ_SUFFIX): position/effects/walk_change.c \
 position/effects/walk_change.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/walk_change.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
position/effects/utils$(OBJ_SUFFIX): position/effects/utils.c \
 position/effects/utils.h position/board.h utilities/bitmask.h \
 position/pieceid.h pieces/pieces.h utilities/boolean.h solving/ply.h \
 position/side.h position/side.enum.h position/side.enum \
 conditions/actuated_revolving_centre.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 output/mode.enum solving/machinery/dispatch.h debugging/trace.h \
 solving/move_effect_journal.h position/castling_rights.h \
 position/effects/piece_removal.h position/effects/piece_creation.h \
 position/effects/piece_movement.h position/effects/piece_exchange.h \
 position/effects/board_transformation.h debugging/assert.h
position/effects/utils.h:
position/board.h:
utilities/bitmask.h:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
solving/ply.h:
position/side.h:
position/side.enum.h:
position/side.enum:
conditions/actuated_revolving_centre.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/move_effect_journal.h:
position/castling_rights.h:
position/effects/piece_removal.h:
position/effects/piece_creation.h:
position/effects/piece_movement.h:
position/effects/piece_exchange.h:
position/effects/board_transformation.h:
debugging/assert.h:
position/effects/total_side_exchange$(OBJ_SUFFIX): \
 position/effects/total_side_exchange.c \
 position/effects/total_side_exchange.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum pieces/walks/vectors.h debugging/assert.h
position/effects/total_side_exchange.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
debugging/assert.h:
