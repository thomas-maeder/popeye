optimisations/goals/optimisation_guards$(OBJ_SUFFIX): \
 optimisations/goals/optimisation_guards.c \
 optimisations/goals/optimisation_guards.h solving/moves_traversal.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 stipulation/traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/branch.h \
 stipulation/battle_play/branch.h stipulation/slice_insertion.h \
 stipulation/help_play/branch.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/goals/prerequisite_guards.h \
 optimisations/goals/enpassant/filter.h \
 optimisations/goals/castling/filter.h debugging/assert.h
optimisations/goals/optimisation_guards.h:
solving/moves_traversal.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/branch.h:
stipulation/battle_play/branch.h:
stipulation/slice_insertion.h:
stipulation/help_play/branch.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/goals/prerequisite_guards.h:
optimisations/goals/enpassant/filter.h:
optimisations/goals/castling/filter.h:
debugging/assert.h:
optimisations/goals/remove_non_reachers$(OBJ_SUFFIX): \
 optimisations/goals/remove_non_reachers.c \
 optimisations/goals/remove_non_reachers.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/conditions.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/proxy.h \
 stipulation/slice_insertion.h solving/moves_traversal.h \
 solving/fork_on_remaining.h \
 optimisations/goals/enpassant/remove_non_reachers.h \
 optimisations/goals/castling/remove_non_reachers.h \
 optimisations/goals/chess81/remove_non_reachers.h \
 optimisations/goals/capture/remove_non_reachers.h \
 optimisations/goals/target/remove_non_reachers.h debugging/assert.h
optimisations/goals/remove_non_reachers.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/conditions.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/proxy.h:
stipulation/slice_insertion.h:
solving/moves_traversal.h:
solving/fork_on_remaining.h:
optimisations/goals/enpassant/remove_non_reachers.h:
optimisations/goals/castling/remove_non_reachers.h:
optimisations/goals/chess81/remove_non_reachers.h:
optimisations/goals/capture/remove_non_reachers.h:
optimisations/goals/target/remove_non_reachers.h:
debugging/assert.h:
