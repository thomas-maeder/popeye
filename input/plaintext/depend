input/plaintext/token$(OBJ_SUFFIX): input/plaintext/token.c input/plaintext/token.h \
 input/plaintext/language.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum output/output.h \
 output/plaintext/message.h output/message.h output/plaintext/protocol.h \
 solving/pipe.h solving/machinery/solve.h solving/machinery/dispatch.h \
 debugging/trace.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 platform/tmpfile.h
input/plaintext/token.h:
input/plaintext/language.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/output.h:
output/plaintext/message.h:
output/message.h:
output/plaintext/protocol.h:
solving/pipe.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
platform/tmpfile.h:
input/plaintext/plaintext$(OBJ_SUFFIX): input/plaintext/plaintext.c \
 input/plaintext/plaintext.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 input/plaintext/token.h input/plaintext/language.h conditions/mummer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/ply.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h solving/pipe.h
input/plaintext/plaintext.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
output/plaintext/language_dependant.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/ply.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
solving/pipe.h:
input/plaintext/pieces$(OBJ_SUFFIX): input/plaintext/pieces.c \
 input/plaintext/pieces.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h position/castling_rights.h \
 input/plaintext/geometry/square.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 output/mode.enum input/plaintext/token.h input/plaintext/language.h \
 conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/ply.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h output/plaintext/pieces.h \
 output/output.h output/latex/latex.h output/plaintext/plaintext.h \
 position/underworld.h position/effects/piece_creation.h \
 position/effects/piece_removal.h pieces/attributes/neutral/neutral.h \
 pieces/attributes/total_invisible.h \
 pieces/attributes/total_invisible/goal_validation.h \
 pieces/walks/hunters.h solving/observation.h solving/temporary_hacks.h \
 solving/fork.h conditions/circe/parachute.h
input/plaintext/pieces.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
input/plaintext/geometry/square.h:
output/plaintext/language_dependant.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/ply.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
output/plaintext/pieces.h:
output/output.h:
output/latex/latex.h:
output/plaintext/plaintext.h:
position/underworld.h:
position/effects/piece_creation.h:
position/effects/piece_removal.h:
pieces/attributes/neutral/neutral.h:
pieces/attributes/total_invisible.h:
pieces/attributes/total_invisible/goal_validation.h:
pieces/walks/hunters.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
conditions/circe/parachute.h:
input/plaintext/twin$(OBJ_SUFFIX): input/plaintext/twin.c input/plaintext/twin.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 input/plaintext/token.h input/plaintext/language.h \
 input/plaintext/pieces.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h \
 input/plaintext/problem.h input/plaintext/stipulation.h \
 solving/move_effect_journal.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 input/plaintext/sstipulation.h input/plaintext/condition.h \
 input/plaintext/option.h input/plaintext/geometry/square.h \
 output/output.h output/plaintext/language_dependant.h \
 conditions/conditions.h options/options.h conditions/mummer.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h output/plaintext/pieces.h \
 output/plaintext/illegal_selfcheck_writer.h output/plaintext/twinning.h \
 output/plaintext/protocol.h output/latex/latex.h \
 output/plaintext/plaintext.h output/latex/twinning.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 options/quodlibet.h options/goal_is_end.h \
 options/maxsolutions/maxsolutions.h \
 options/stoponshortsolutions/stoponshortsolutions.h \
 pieces/attributes/neutral/neutral.h pieces/attributes/chameleon.h \
 pieces/attributes/total_invisible.h \
 pieces/attributes/total_invisible/goal_validation.h \
 position/underworld.h position/effects/piece_creation.h \
 position/effects/board_transformation.h position/effects/piece_removal.h \
 position/effects/piece_movement.h position/effects/walk_change.h \
 position/effects/piece_exchange.h position/effects/total_side_exchange.h \
 stipulation/pipe.h stipulation/branch.h stipulation/help_play/branch.h \
 stipulation/battle_play/branch.h stipulation/proxy.h \
 stipulation/modifier.h solving/goals/prerequisite_guards.h \
 solving/pipe.h solving/duplex.h solving/proofgames.h \
 solving/zeroposition.h utilities/table.h platform/maxmem.h \
 platform/maxtime.h debugging/measure.h debugging/assert.h
input/plaintext/twin.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/token.h:
input/plaintext/language.h:
input/plaintext/pieces.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
input/plaintext/problem.h:
input/plaintext/stipulation.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
input/plaintext/sstipulation.h:
input/plaintext/condition.h:
input/plaintext/option.h:
input/plaintext/geometry/square.h:
output/output.h:
output/plaintext/language_dependant.h:
conditions/conditions.h:
options/options.h:
conditions/mummer.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
output/plaintext/pieces.h:
output/plaintext/illegal_selfcheck_writer.h:
output/plaintext/twinning.h:
output/plaintext/protocol.h:
output/latex/latex.h:
output/plaintext/plaintext.h:
output/latex/twinning.h:
optimisations/intelligent/limit_nr_solutions_per_target.h:
options/quodlibet.h:
options/goal_is_end.h:
options/maxsolutions/maxsolutions.h:
options/stoponshortsolutions/stoponshortsolutions.h:
pieces/attributes/neutral/neutral.h:
pieces/attributes/chameleon.h:
pieces/attributes/total_invisible.h:
pieces/attributes/total_invisible/goal_validation.h:
position/underworld.h:
position/effects/piece_creation.h:
position/effects/board_transformation.h:
position/effects/piece_removal.h:
position/effects/piece_movement.h:
position/effects/walk_change.h:
position/effects/piece_exchange.h:
position/effects/total_side_exchange.h:
stipulation/pipe.h:
stipulation/branch.h:
stipulation/help_play/branch.h:
stipulation/battle_play/branch.h:
stipulation/proxy.h:
stipulation/modifier.h:
solving/goals/prerequisite_guards.h:
solving/pipe.h:
solving/duplex.h:
solving/proofgames.h:
solving/zeroposition.h:
utilities/table.h:
platform/maxmem.h:
platform/maxtime.h:
debugging/measure.h:
debugging/assert.h:
input/plaintext/stipulation$(OBJ_SUFFIX): input/plaintext/stipulation.c \
 input/plaintext/stipulation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_effect_journal.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 input/plaintext/goal.h input/plaintext/token.h \
 input/plaintext/language.h input/plaintext/problem.h output/output.h \
 output/plaintext/plaintext.h output/plaintext/message.h output/message.h \
 conditions/check_zigzag.h position/position.h position/color.h \
 position/color.enum.h position/color.enum pieces/walks/vectors.h \
 stipulation/slice_insertion.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/help_play/branch.h stipulation/battle_play/branch.h \
 stipulation/move_inverter.h stipulation/boolean/and.h \
 stipulation/boolean/not.h stipulation/proxy.h stipulation/pipe.h \
 stipulation/branch.h solving/machinery/twin.h debugging/assert.h
input/plaintext/stipulation.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_effect_journal.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
input/plaintext/goal.h:
input/plaintext/token.h:
input/plaintext/language.h:
input/plaintext/problem.h:
output/output.h:
output/plaintext/plaintext.h:
output/plaintext/message.h:
output/message.h:
conditions/check_zigzag.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
stipulation/slice_insertion.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/help_play/branch.h:
stipulation/battle_play/branch.h:
stipulation/move_inverter.h:
stipulation/boolean/and.h:
stipulation/boolean/not.h:
stipulation/proxy.h:
stipulation/pipe.h:
stipulation/branch.h:
solving/machinery/twin.h:
debugging/assert.h:
input/plaintext/sstipulation$(OBJ_SUFFIX): input/plaintext/sstipulation.c \
 input/plaintext/sstipulation.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 input/plaintext/stipulation.h solving/move_effect_journal.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/castling_rights.h solving/ply.h position/pieceid.h \
 input/plaintext/goal.h input/plaintext/token.h \
 input/plaintext/language.h output/output.h output/plaintext/plaintext.h \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 pieces/walks/vectors.h conditions/conditions.h options/options.h \
 input/plaintext/twin.h conditions/mummer.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h conditions/check_zigzag.h \
 stipulation/branch.h stipulation/help_play/branch.h \
 stipulation/battle_play/branch.h stipulation/move_inverter.h \
 stipulation/boolean/and.h stipulation/boolean/or.h \
 stipulation/boolean/not.h stipulation/proxy.h stipulation/pipe.h \
 solving/play_suppressor.h debugging/assert.h
input/plaintext/sstipulation.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/stipulation.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/castling_rights.h:
solving/ply.h:
position/pieceid.h:
input/plaintext/goal.h:
input/plaintext/token.h:
input/plaintext/language.h:
output/output.h:
output/plaintext/plaintext.h:
output/plaintext/language_dependant.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
pieces/walks/vectors.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
conditions/mummer.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
conditions/check_zigzag.h:
stipulation/branch.h:
stipulation/help_play/branch.h:
stipulation/battle_play/branch.h:
stipulation/move_inverter.h:
stipulation/boolean/and.h:
stipulation/boolean/or.h:
stipulation/boolean/not.h:
stipulation/proxy.h:
stipulation/pipe.h:
solving/play_suppressor.h:
debugging/assert.h:
input/plaintext/goal$(OBJ_SUFFIX): input/plaintext/goal.c input/plaintext/goal.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 input/plaintext/geometry/square.h input/plaintext/token.h \
 input/plaintext/language.h output/output.h output/plaintext/position.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h output/plaintext/message.h output/message.h \
 conditions/imitator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 solving/move_effect_journal.h solving/ply.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h stipulation/goals/target/reached_tester.h \
 stipulation/goals/immobile/reached_tester.h \
 stipulation/goals/reached_tester.h \
 stipulation/goals/mate/reached_tester.h \
 stipulation/goals/stalemate/reached_tester.h \
 stipulation/goals/doublestalemate/reached_tester.h \
 stipulation/goals/check/reached_tester.h \
 stipulation/goals/capture/reached_tester.h \
 stipulation/goals/steingewinn/reached_tester.h \
 stipulation/goals/enpassant/reached_tester.h \
 stipulation/goals/doublemate/reached_tester.h \
 stipulation/goals/countermate/reached_tester.h \
 stipulation/goals/castling/reached_tester.h \
 stipulation/goals/autostalemate/reached_tester.h \
 stipulation/goals/automate/reached_tester.h \
 stipulation/goals/circuit/reached_tester.h \
 stipulation/goals/exchange/reached_tester.h \
 stipulation/goals/circuit_by_rebirth/reached_tester.h \
 stipulation/goals/exchange_by_rebirth/reached_tester.h \
 stipulation/goals/any/reached_tester.h \
 stipulation/goals/proofgame/reached_tester.h \
 stipulation/goals/atob/reached_tester.h \
 stipulation/goals/chess81/reached_tester.h \
 stipulation/goals/kiss/reached_tester.h solving/proofgames.h \
 debugging/assert.h
input/plaintext/goal.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/geometry/square.h:
input/plaintext/token.h:
input/plaintext/language.h:
output/output.h:
output/plaintext/position.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
output/plaintext/message.h:
output/message.h:
conditions/imitator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/move_effect_journal.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
stipulation/goals/target/reached_tester.h:
stipulation/goals/immobile/reached_tester.h:
stipulation/goals/reached_tester.h:
stipulation/goals/mate/reached_tester.h:
stipulation/goals/stalemate/reached_tester.h:
stipulation/goals/doublestalemate/reached_tester.h:
stipulation/goals/check/reached_tester.h:
stipulation/goals/capture/reached_tester.h:
stipulation/goals/steingewinn/reached_tester.h:
stipulation/goals/enpassant/reached_tester.h:
stipulation/goals/doublemate/reached_tester.h:
stipulation/goals/countermate/reached_tester.h:
stipulation/goals/castling/reached_tester.h:
stipulation/goals/autostalemate/reached_tester.h:
stipulation/goals/automate/reached_tester.h:
stipulation/goals/circuit/reached_tester.h:
stipulation/goals/exchange/reached_tester.h:
stipulation/goals/circuit_by_rebirth/reached_tester.h:
stipulation/goals/exchange_by_rebirth/reached_tester.h:
stipulation/goals/any/reached_tester.h:
stipulation/goals/proofgame/reached_tester.h:
stipulation/goals/atob/reached_tester.h:
stipulation/goals/chess81/reached_tester.h:
stipulation/goals/kiss/reached_tester.h:
solving/proofgames.h:
debugging/assert.h:
input/plaintext/condition$(OBJ_SUFFIX): input/plaintext/condition.c \
 input/plaintext/condition.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 input/plaintext/pieces.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h \
 input/plaintext/geometry/square.h output/output.h \
 output/plaintext/language_dependant.h conditions/conditions.h \
 options/options.h input/plaintext/twin.h input/plaintext/token.h \
 input/plaintext/language.h conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/ply.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h \
 pieces/walks/pawns/promotee_sequence.h pieces/attributes/chameleon.h \
 pieces/attributes/neutral/neutral.h conditions/annan.h \
 conditions/anticirce/cheylan.h conditions/bgl.h conditions/bolero.h \
 conditions/breton.h conditions/circe/april.h \
 conditions/circe/rex_inclusive.h conditions/circe/chameleon.h \
 conditions/circe/assassin.h conditions/circe/parrain.h \
 conditions/dister.h conditions/football.h conditions/geneva.h \
 conditions/grid.h conditions/imitator.h conditions/immune.h \
 conditions/isardam.h conditions/kobul.h conditions/koeko/anti.h \
 conditions/koeko/koeko.h conditions/madrasi.h conditions/magic_square.h \
 conditions/marscirce/marscirce.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h \
 conditions/marscirce/anti.h conditions/marscirce/phantom.h \
 conditions/messigny.h conditions/oscillating_kings.h \
 conditions/protean.h conditions/republican.h conditions/sat.h \
 conditions/singlebox/type1.h \
 conditions/transmuting_kings/vaulting_kings.h conditions/woozles.h \
 conditions/role_exchange.h pieces/walks/pawns/en_passant.h \
 solving/castling.h solving/pipe.h debugging/assert.h
input/plaintext/condition.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/pieces.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
input/plaintext/geometry/square.h:
output/output.h:
output/plaintext/language_dependant.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
input/plaintext/token.h:
input/plaintext/language.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/ply.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
pieces/walks/pawns/promotee_sequence.h:
pieces/attributes/chameleon.h:
pieces/attributes/neutral/neutral.h:
conditions/annan.h:
conditions/anticirce/cheylan.h:
conditions/bgl.h:
conditions/bolero.h:
conditions/breton.h:
conditions/circe/april.h:
conditions/circe/rex_inclusive.h:
conditions/circe/chameleon.h:
conditions/circe/assassin.h:
conditions/circe/parrain.h:
conditions/dister.h:
conditions/football.h:
conditions/geneva.h:
conditions/grid.h:
conditions/imitator.h:
conditions/immune.h:
conditions/isardam.h:
conditions/kobul.h:
conditions/koeko/anti.h:
conditions/koeko/koeko.h:
conditions/madrasi.h:
conditions/magic_square.h:
conditions/marscirce/marscirce.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
conditions/marscirce/anti.h:
conditions/marscirce/phantom.h:
conditions/messigny.h:
conditions/oscillating_kings.h:
conditions/protean.h:
conditions/republican.h:
conditions/sat.h:
conditions/singlebox/type1.h:
conditions/transmuting_kings/vaulting_kings.h:
conditions/woozles.h:
conditions/role_exchange.h:
pieces/walks/pawns/en_passant.h:
solving/castling.h:
solving/pipe.h:
debugging/assert.h:
input/plaintext/option$(OBJ_SUFFIX): input/plaintext/option.c \
 input/plaintext/option.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 input/plaintext/geometry/square.h input/plaintext/condition.h \
 input/plaintext/token.h input/plaintext/language.h output/output.h \
 options/options.h options/maxsolutions/maxsolutions.h \
 options/movenumbers.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 options/maxthreatlength.h options/maxtime.h platform/maxtime.h \
 options/degenerate_tree.h options/maxflightsquares.h \
 options/nontrivial.h \
 optimisations/intelligent/limit_nr_solutions_per_target.h \
 options/stoponshortsolutions/stoponshortsolutions.h \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 conditions/conditions.h input/plaintext/twin.h conditions/mummer.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 output/plaintext/message.h output/message.h \
 pieces/walks/pawns/en_passant.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h solving/castling.h \
 solving/battle_play/try.h utilities/table.h solving/duplex.h \
 solving/pipe.h stipulation/pipe.h stipulation/branch.h \
 stipulation/modifier.h platform/beep.h
input/plaintext/option.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/geometry/square.h:
input/plaintext/condition.h:
input/plaintext/token.h:
input/plaintext/language.h:
output/output.h:
options/options.h:
options/maxsolutions/maxsolutions.h:
options/movenumbers.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
options/maxthreatlength.h:
options/maxtime.h:
platform/maxtime.h:
options/degenerate_tree.h:
options/maxflightsquares.h:
options/nontrivial.h:
optimisations/intelligent/limit_nr_solutions_per_target.h:
options/stoponshortsolutions/stoponshortsolutions.h:
output/plaintext/language_dependant.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/conditions.h:
input/plaintext/twin.h:
conditions/mummer.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
output/plaintext/message.h:
output/message.h:
pieces/walks/pawns/en_passant.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/castling.h:
solving/battle_play/try.h:
utilities/table.h:
solving/duplex.h:
solving/pipe.h:
stipulation/pipe.h:
stipulation/branch.h:
stipulation/modifier.h:
platform/beep.h:
input/plaintext/problem$(OBJ_SUFFIX): input/plaintext/problem.c \
 input/plaintext/problem.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 input/plaintext/token.h input/plaintext/language.h \
 output/plaintext/protocol.h output/plaintext/message.h output/message.h \
 output/plaintext/language_dependant.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 conditions/conditions.h options/options.h input/plaintext/twin.h \
 conditions/mummer.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/ply.h solving/machinery/twin.h \
 conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 solving/move_generator.h debugging/measure.h solving/pipe.h \
 solving/incomplete.h stipulation/pipe.h stipulation/branch.h \
 stipulation/modifier.h position/effects/king_square.h debugging/assert.h
input/plaintext/problem.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
input/plaintext/token.h:
input/plaintext/language.h:
output/plaintext/protocol.h:
output/plaintext/message.h:
output/message.h:
output/plaintext/language_dependant.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/conditions.h:
options/options.h:
input/plaintext/twin.h:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/ply.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
solving/move_generator.h:
debugging/measure.h:
solving/pipe.h:
solving/incomplete.h:
stipulation/pipe.h:
stipulation/branch.h:
stipulation/modifier.h:
position/effects/king_square.h:
debugging/assert.h:
input/plaintext/language$(OBJ_SUFFIX): input/plaintext/language.c \
 input/plaintext/language.h
input/plaintext/language.h:
input/plaintext/memory$(OBJ_SUFFIX): input/plaintext/memory.c \
 input/plaintext/memory.h platform/maxmem.h utilities/boolean.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum
input/plaintext/memory.h:
platform/maxmem.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
