conditions/exclusive$(OBJ_SUFFIX): conditions/exclusive.c conditions/exclusive.h \
 utilities/boolean.h utilities/table.h position/position.h \
 position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/side.enum position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/pieces.h pieces/walks/vectors.h position/castling_rights.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 output/mode.enum solving/machinery/solve.h solving/machinery/dispatch.h \
 debugging/trace.h solving/ply.h stipulation/goals/slice_insertion.h \
 optimisations/detect_retraction.h output/plaintext/message.h \
 output/message.h input/plaintext/language.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h stipulation/slice_insertion.h stipulation/move.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum solving/temporary_hacks.h \
 solving/conditional_pipe.h solving/pipe.h debugging/assert.h
conditions/exclusive.h:
utilities/boolean.h:
utilities/table.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
pieces/walks/vectors.h:
position/castling_rights.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
stipulation/goals/slice_insertion.h:
optimisations/detect_retraction.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
stipulation/slice_insertion.h:
stipulation/move.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
solving/temporary_hacks.h:
solving/conditional_pipe.h:
solving/pipe.h:
debugging/assert.h:
conditions/republican$(OBJ_SUFFIX): conditions/republican.c conditions/republican.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/conditions.h position/effects/king_square.h \
 solving/move_effect_journal.h position/effects/piece_creation.h \
 options/options.h input/plaintext/language.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 solving/pipe.h solving/conditional_pipe.h solving/temporary_hacks.h \
 solving/post_move_iteration.h solving/observation.h solving/fork.h \
 output/plaintext/message.h output/message.h \
 optimisations/orthodox_mating_moves/orthodox_mating_moves_generation.h \
 optimisations/detect_retraction.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h stipulation/move.h stipulation/battle_play/branch.h \
 stipulation/slice_insertion.h stipulation/help_play/branch.h \
 output/plaintext/language_dependant.h input/plaintext/twin.h \
 input/plaintext/token.h conditions/mummer.h \
 conditions/anticirce/anticirce.h conditions/circe/circe.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/sentinelles.h \
 debugging/assert.h
conditions/republican.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/conditions.h:
position/effects/king_square.h:
solving/move_effect_journal.h:
position/effects/piece_creation.h:
options/options.h:
input/plaintext/language.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
solving/pipe.h:
solving/conditional_pipe.h:
solving/temporary_hacks.h:
solving/post_move_iteration.h:
solving/observation.h:
solving/fork.h:
output/plaintext/message.h:
output/message.h:
optimisations/orthodox_mating_moves/orthodox_mating_moves_generation.h:
optimisations/detect_retraction.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
stipulation/move.h:
stipulation/battle_play/branch.h:
stipulation/slice_insertion.h:
stipulation/help_play/branch.h:
output/plaintext/language_dependant.h:
input/plaintext/twin.h:
input/plaintext/token.h:
conditions/mummer.h:
conditions/anticirce/anticirce.h:
conditions/circe/circe.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/sentinelles.h:
debugging/assert.h:
conditions/bgl$(OBJ_SUFFIX): conditions/bgl.c conditions/bgl.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_effect_journal.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h solving/pipe.h debugging/assert.h
conditions/bgl.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_effect_journal.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/check_zigzag$(OBJ_SUFFIX): conditions/check_zigzag.c \
 conditions/check_zigzag.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 stipulation/if_then_else.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h stipulation/move_played.h stipulation/proxy.h \
 stipulation/pipe.h stipulation/battle_play/branch.h \
 stipulation/slice_insertion.h stipulation/help_play/branch.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h stipulation/boolean/true.h \
 solving/machinery/slack_length.h \
 stipulation/goals/check/reached_tester.h debugging/assert.h
conditions/check_zigzag.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/if_then_else.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
stipulation/move_played.h:
stipulation/proxy.h:
stipulation/pipe.h:
stipulation/battle_play/branch.h:
stipulation/slice_insertion.h:
stipulation/help_play/branch.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/boolean/true.h:
solving/machinery/slack_length.h:
stipulation/goals/check/reached_tester.h:
debugging/assert.h:
conditions/blackchecks$(OBJ_SUFFIX): conditions/blackchecks.c \
 conditions/blackchecks.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/mummer.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h solving/check.h \
 solving/pipe.h options/nullmoves.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/pipe.h stipulation/slice_insertion.h stipulation/move.h \
 debugging/assert.h
conditions/blackchecks.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/mummer.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/check.h:
solving/pipe.h:
options/nullmoves.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/pipe.h:
stipulation/slice_insertion.h:
stipulation/move.h:
debugging/assert.h:
conditions/extinction$(OBJ_SUFFIX): conditions/extinction.c conditions/extinction.h \
 position/side.h position/side.enum.h position/side.enum \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/pipe.h solving/check.h debugging/measure.h \
 output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/move_generator.h \
 solving/move_effect_journal.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h
conditions/extinction.h:
position/side.h:
position/side.enum.h:
position/side.enum:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/pipe.h:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_generator.h:
solving/move_effect_journal.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
conditions/patience$(OBJ_SUFFIX): conditions/patience.c conditions/patience.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/conditions.h solving/castling.h \
 solving/move_effect_journal.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/pipe.h stipulation/move.h solving/pipe.h debugging/assert.h
conditions/patience.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/conditions.h:
solving/castling.h:
solving/move_effect_journal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/pipe.h:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/madrasi$(OBJ_SUFFIX): conditions/madrasi.c conditions/madrasi.h \
 pieces/pieces.h utilities/boolean.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/move_generator.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/find_square_observer_tracking_back_from_target.h solving/pipe.h
conditions/madrasi.h:
pieces/pieces.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/pipe.h:
conditions/isardam$(OBJ_SUFFIX): conditions/isardam.c conditions/isardam.h \
 conditions/conditions.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h position/castling_rights.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum output/mode.h \
 output/mode.enum.h output/mode.enum solving/machinery/dispatch.h \
 debugging/trace.h solving/ply.h conditions/madrasi.h stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/pipe.h debugging/assert.h
conditions/isardam.h:
conditions/conditions.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
conditions/madrasi.h:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
debugging/assert.h:
conditions/disparate$(OBJ_SUFFIX): conditions/disparate.c conditions/disparate.h \
 pieces/pieces.h utilities/boolean.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/move_effect_journal.h solving/pipe.h debugging/assert.h
conditions/disparate.h:
pieces/pieces.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_effect_journal.h:
solving/pipe.h:
debugging/assert.h:
conditions/eiffel$(OBJ_SUFFIX): conditions/eiffel.c conditions/eiffel.h \
 pieces/pieces.h utilities/boolean.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/find_square_observer_tracking_back_from_target.h solving/pipe.h
conditions/eiffel.h:
pieces/pieces.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/pipe.h:
conditions/sat$(OBJ_SUFFIX): conditions/sat.c conditions/sat.h position/side.h \
 position/side.enum.h position/side.enum solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_effect_journal.h \
 pieces/walks/generate_moves.h position/effects/king_square.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h stipulation/move.h \
 solving/temporary_hacks.h solving/legal_move_counter.h solving/check.h \
 solving/pipe.h debugging/assert.h
conditions/sat.h:
position/side.h:
position/side.enum.h:
position/side.enum:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_effect_journal.h:
pieces/walks/generate_moves.h:
position/effects/king_square.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
stipulation/move.h:
solving/temporary_hacks.h:
solving/legal_move_counter.h:
solving/check.h:
solving/pipe.h:
debugging/assert.h:
conditions/masand$(OBJ_SUFFIX): conditions/masand.c conditions/masand.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/attributes/neutral/neutral.h \
 position/effects/side_change.h solving/move_effect_journal.h \
 position/effects/utils.h solving/observation.h solving/temporary_hacks.h \
 solving/fork.h solving/check.h debugging/measure.h \
 output/plaintext/protocol.h solving/move_generator.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/move.h solving/pipe.h debugging/assert.h
conditions/masand.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/attributes/neutral/neutral.h:
position/effects/side_change.h:
solving/move_effect_journal.h:
position/effects/utils.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/move_generator.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/dynasty$(OBJ_SUFFIX): conditions/dynasty.c conditions/dynasty.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/castling.h solving/move_effect_journal.h \
 position/effects/flags_change.h solving/check.h debugging/measure.h \
 output/plaintext/protocol.h solving/pipe.h debugging/assert.h
conditions/dynasty.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/castling.h:
solving/move_effect_journal.h:
position/effects/flags_change.h:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
debugging/assert.h:
conditions/oscillating_kings$(OBJ_SUFFIX): conditions/oscillating_kings.c \
 conditions/oscillating_kings.h conditions/conditions.h \
 position/position.h position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/side.enum position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/vectors.h \
 position/castling_rights.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 output/mode.enum solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h position/effects/king_square.h \
 solving/move_effect_journal.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h stipulation/move.h stipulation/battle_play/branch.h \
 stipulation/slice_insertion.h stipulation/help_play/branch.h \
 position/effects/piece_exchange.h solving/check.h debugging/measure.h \
 output/plaintext/protocol.h solving/pipe.h debugging/assert.h
conditions/oscillating_kings.h:
conditions/conditions.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
position/effects/king_square.h:
solving/move_effect_journal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
stipulation/move.h:
stipulation/battle_play/branch.h:
stipulation/slice_insertion.h:
stipulation/help_play/branch.h:
position/effects/piece_exchange.h:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
debugging/assert.h:
conditions/messigny$(OBJ_SUFFIX): conditions/messigny.c conditions/messigny.h \
 pieces/pieces.h utilities/boolean.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum output/mode.h \
 output/mode.enum.h output/mode.enum solving/machinery/dispatch.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h solving/ply.h \
 solving/castling.h solving/move_effect_journal.h \
 position/effects/piece_exchange.h position/effects/piece_removal.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h solving/pipe.h solving/fork.h solving/observation.h \
 solving/temporary_hacks.h debugging/assert.h
conditions/messigny.h:
pieces/pieces.h:
utilities/boolean.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/castling.h:
solving/move_effect_journal.h:
position/effects/piece_exchange.h:
position/effects/piece_removal.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
solving/pipe.h:
solving/fork.h:
solving/observation.h:
solving/temporary_hacks.h:
debugging/assert.h:
conditions/actuated_revolving_centre$(OBJ_SUFFIX): \
 conditions/actuated_revolving_centre.c \
 conditions/actuated_revolving_centre.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_effect_journal.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/pipe.h debugging/assert.h
conditions/actuated_revolving_centre.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_effect_journal.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/pipe.h:
debugging/assert.h:
conditions/actuated_revolving_board$(OBJ_SUFFIX): \
 conditions/actuated_revolving_board.c \
 conditions/actuated_revolving_board.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 position/effects/board_transformation.h solving/move_effect_journal.h \
 solving/pipe.h debugging/assert.h
conditions/actuated_revolving_board.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
position/effects/board_transformation.h:
solving/move_effect_journal.h:
solving/pipe.h:
debugging/assert.h:
conditions/sentinelles$(OBJ_SUFFIX): conditions/sentinelles.c \
 conditions/sentinelles.h pieces/pieces.h utilities/boolean.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/attributes/neutral/neutral.h \
 pieces/walks/classification.h stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum solving/pipe.h \
 position/effects/piece_creation.h solving/move_effect_journal.h \
 position/effects/piece_movement.h debugging/assert.h
conditions/sentinelles.h:
pieces/pieces.h:
utilities/boolean.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/attributes/neutral/neutral.h:
pieces/walks/classification.h:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
solving/pipe.h:
position/effects/piece_creation.h:
solving/move_effect_journal.h:
position/effects/piece_movement.h:
debugging/assert.h:
conditions/duellists$(OBJ_SUFFIX): conditions/duellists.c conditions/duellists.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_effect_journal.h conditions/mummer.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/pipe.h position/effects/utils.h debugging/assert.h
conditions/duellists.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_effect_journal.h:
conditions/mummer.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/pipe.h:
position/effects/utils.h:
debugging/assert.h:
conditions/haunted_chess$(OBJ_SUFFIX): conditions/haunted_chess.c \
 conditions/haunted_chess.h pieces/pieces.h utilities/boolean.h \
 position/underworld.h solving/move_effect_journal.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h position/effects/piece_readdition.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 solving/pipe.h debugging/assert.h
conditions/haunted_chess.h:
pieces/pieces.h:
utilities/boolean.h:
position/underworld.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
position/effects/piece_readdition.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
debugging/assert.h:
conditions/ghost_chess$(OBJ_SUFFIX): conditions/ghost_chess.c \
 conditions/ghost_chess.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 solving/move_effect_journal.h conditions/haunted_chess.h \
 position/underworld.h solving/pipe.h debugging/assert.h
conditions/ghost_chess.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/move_effect_journal.h:
conditions/haunted_chess.h:
position/underworld.h:
solving/pipe.h:
debugging/assert.h:
conditions/kobul$(OBJ_SUFFIX): conditions/kobul.c conditions/kobul.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/walks/classification.h \
 position/effects/king_square.h solving/move_effect_journal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 position/effects/walk_change.h position/effects/flags_change.h \
 solving/pipe.h debugging/assert.h
conditions/kobul.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/walks/classification.h:
position/effects/king_square.h:
solving/move_effect_journal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
position/effects/walk_change.h:
position/effects/flags_change.h:
solving/pipe.h:
debugging/assert.h:
conditions/andernach$(OBJ_SUFFIX): conditions/andernach.c conditions/andernach.h \
 position/side.h position/side.enum.h position/side.enum \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 position/effects/side_change.h solving/move_effect_journal.h \
 position/effects/utils.h solving/pipe.h debugging/assert.h
conditions/andernach.h:
position/side.h:
position/side.enum.h:
position/side.enum:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
position/effects/side_change.h:
solving/move_effect_journal.h:
position/effects/utils.h:
solving/pipe.h:
debugging/assert.h:
conditions/antiandernach$(OBJ_SUFFIX): conditions/antiandernach.c \
 conditions/antiandernach.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 solving/move_effect_journal.h conditions/andernach.h solving/pipe.h \
 debugging/assert.h
conditions/antiandernach.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/move_effect_journal.h:
conditions/andernach.h:
solving/pipe.h:
debugging/assert.h:
conditions/chameleon_pursuit$(OBJ_SUFFIX): conditions/chameleon_pursuit.c \
 conditions/chameleon_pursuit.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/andernach.h solving/move_effect_journal.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h solving/pipe.h \
 debugging/assert.h
conditions/chameleon_pursuit.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/andernach.h:
solving/move_effect_journal.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/norsk$(OBJ_SUFFIX): conditions/norsk.c conditions/norsk.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/walks/walks.h position/effects/walk_change.h \
 solving/move_effect_journal.h position/effects/utils.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h stipulation/move.h solving/pipe.h \
 debugging/assert.h
conditions/norsk.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/walks/walks.h:
position/effects/walk_change.h:
solving/move_effect_journal.h:
position/effects/utils.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/protean$(OBJ_SUFFIX): conditions/protean.c conditions/protean.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 position/effects/walk_change.h solving/move_effect_journal.h \
 solving/pipe.h debugging/assert.h
conditions/protean.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
position/effects/walk_change.h:
solving/move_effect_journal.h:
solving/pipe.h:
debugging/assert.h:
conditions/traitor$(OBJ_SUFFIX): conditions/traitor.c conditions/traitor.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/attributes/neutral/neutral.h \
 position/effects/side_change.h solving/move_effect_journal.h \
 position/effects/utils.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h solving/pipe.h \
 debugging/assert.h
conditions/traitor.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/attributes/neutral/neutral.h:
position/effects/side_change.h:
solving/move_effect_journal.h:
position/effects/utils.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/volage$(OBJ_SUFFIX): conditions/volage.c conditions/volage.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h position/effects/flags_change.h \
 solving/move_effect_journal.h position/effects/side_change.h \
 position/effects/piece_movement.h position/effects/utils.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h solving/pipe.h \
 conditions/conditions.h debugging/assert.h
conditions/volage.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
position/effects/flags_change.h:
solving/move_effect_journal.h:
position/effects/side_change.h:
position/effects/piece_movement.h:
position/effects/utils.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/pipe.h:
conditions/conditions.h:
debugging/assert.h:
conditions/magic_square$(OBJ_SUFFIX): conditions/magic_square.c \
 conditions/magic_square.h conditions/conditions.h position/position.h \
 position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/side.enum position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/vectors.h \
 position/castling_rights.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 output/mode.enum solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h pieces/attributes/neutral/neutral.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 position/effects/side_change.h solving/move_effect_journal.h \
 solving/pipe.h debugging/assert.h
conditions/magic_square.h:
conditions/conditions.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
pieces/attributes/neutral/neutral.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
position/effects/side_change.h:
solving/move_effect_journal.h:
solving/pipe.h:
debugging/assert.h:
conditions/tibet$(OBJ_SUFFIX): conditions/tibet.c conditions/tibet.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/move_effect_journal.h conditions/andernach.h solving/pipe.h \
 debugging/assert.h
conditions/tibet.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/move_effect_journal.h:
conditions/andernach.h:
solving/pipe.h:
debugging/assert.h:
conditions/degradierung$(OBJ_SUFFIX): conditions/degradierung.c \
 conditions/degradierung.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/walks/classification.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/branch.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/move.h position/effects/walk_change.h \
 solving/move_effect_journal.h solving/pipe.h debugging/assert.h
conditions/degradierung.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/walks/classification.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/branch.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/move.h:
position/effects/walk_change.h:
solving/move_effect_journal.h:
solving/pipe.h:
debugging/assert.h:
conditions/line_chameleon$(OBJ_SUFFIX): conditions/line_chameleon.c \
 conditions/line_chameleon.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/walks/walks.h position/effects/walk_change.h \
 solving/move_effect_journal.h position/effects/utils.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h solving/pipe.h \
 debugging/assert.h
conditions/line_chameleon.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/walks/walks.h:
position/effects/walk_change.h:
solving/move_effect_journal.h:
position/effects/utils.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/haan$(OBJ_SUFFIX): conditions/haan.c conditions/haan.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/move_effect_journal.h solving/pipe.h debugging/assert.h
conditions/haan.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/move_effect_journal.h:
solving/pipe.h:
debugging/assert.h:
conditions/castling_chess$(OBJ_SUFFIX): conditions/castling_chess.c \
 conditions/castling_chess.h pieces/pieces.h utilities/boolean.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/walks/pawns/promotion.h \
 solving/move_effect_journal.h stipulation/slice_insertion.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h solving/castling.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 solving/post_move_iteration.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h \
 position/effects/piece_movement.h position/effects/piece_removal.h \
 solving/check.h solving/pipe.h debugging/assert.h
conditions/castling_chess.h:
pieces/pieces.h:
utilities/boolean.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/walks/pawns/promotion.h:
solving/move_effect_journal.h:
stipulation/slice_insertion.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/castling.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/post_move_iteration.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
position/effects/piece_movement.h:
position/effects/piece_removal.h:
solving/check.h:
solving/pipe.h:
debugging/assert.h:
conditions/imitator$(OBJ_SUFFIX): conditions/imitator.c conditions/imitator.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_effect_journal.h conditions/conditions.h \
 conditions/castling_chess.h output/plaintext/message.h output/message.h \
 input/plaintext/language.h pieces/walks/pawns/promotion.h \
 stipulation/slice_insertion.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 pieces/walks/pawns/promotee_sequence.h pieces/walks/hoppers.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 pieces/walks/angle/angles.h stipulation/pipe.h stipulation/proxy.h \
 stipulation/fork.h stipulation/branch.h stipulation/move.h \
 solving/post_move_iteration.h position/effects/piece_removal.h \
 solving/pipe.h debugging/assert.h
conditions/imitator.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_effect_journal.h:
conditions/conditions.h:
conditions/castling_chess.h:
output/plaintext/message.h:
output/message.h:
input/plaintext/language.h:
pieces/walks/pawns/promotion.h:
stipulation/slice_insertion.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
pieces/walks/pawns/promotee_sequence.h:
pieces/walks/hoppers.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
pieces/walks/angle/angles.h:
stipulation/pipe.h:
stipulation/proxy.h:
stipulation/fork.h:
stipulation/branch.h:
stipulation/move.h:
solving/post_move_iteration.h:
position/effects/piece_removal.h:
solving/pipe.h:
debugging/assert.h:
conditions/football$(OBJ_SUFFIX): conditions/football.c conditions/football.h \
 pieces/pieces.h utilities/boolean.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum output/mode.h \
 output/mode.enum.h output/mode.enum solving/machinery/dispatch.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h solving/ply.h \
 conditions/singlebox/type1.h conditions/conditions.h \
 pieces/walks/classification.h pieces/walks/pawns/promotion.h \
 solving/move_effect_journal.h stipulation/slice_insertion.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/post_move_iteration.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h position/effects/walk_change.h \
 position/effects/utils.h stipulation/pipe.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h solving/pipe.h debugging/assert.h
conditions/football.h:
pieces/pieces.h:
utilities/boolean.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/singlebox/type1.h:
conditions/conditions.h:
pieces/walks/classification.h:
pieces/walks/pawns/promotion.h:
solving/move_effect_journal.h:
stipulation/slice_insertion.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/post_move_iteration.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
position/effects/walk_change.h:
position/effects/utils.h:
stipulation/pipe.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/exchange_castling$(OBJ_SUFFIX): conditions/exchange_castling.c \
 conditions/exchange_castling.h pieces/pieces.h utilities/boolean.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/castling_chess.h pieces/walks/classification.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 solving/castling.h solving/move_effect_journal.h \
 position/effects/piece_exchange.h position/effects/piece_removal.h \
 solving/pipe.h solving/fork.h solving/observation.h \
 solving/temporary_hacks.h debugging/assert.h
conditions/exchange_castling.h:
pieces/pieces.h:
utilities/boolean.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/castling_chess.h:
pieces/walks/classification.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/castling.h:
solving/move_effect_journal.h:
position/effects/piece_exchange.h:
position/effects/piece_removal.h:
solving/pipe.h:
solving/fork.h:
solving/observation.h:
solving/temporary_hacks.h:
debugging/assert.h:
conditions/mummer$(OBJ_SUFFIX): conditions/mummer.c conditions/mummer.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/singlebox/type3.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/testing_pipe.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/proxy.h stipulation/boolean/true.h stipulation/branch.h \
 stipulation/slice_insertion.h stipulation/battle_play/branch.h \
 stipulation/help_play/branch.h solving/machinery/slack_length.h \
 solving/post_move_iteration.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h \
 solving/conditional_pipe.h position/move_diff_code.h solving/pipe.h \
 debugging/assert.h
conditions/mummer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/singlebox/type3.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/testing_pipe.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/proxy.h:
stipulation/boolean/true.h:
stipulation/branch.h:
stipulation/slice_insertion.h:
stipulation/battle_play/branch.h:
stipulation/help_play/branch.h:
solving/machinery/slack_length.h:
solving/post_move_iteration.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/conditional_pipe.h:
position/move_diff_code.h:
solving/pipe.h:
debugging/assert.h:
conditions/monochrome$(OBJ_SUFFIX): conditions/monochrome.c conditions/monochrome.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/pipe.h
conditions/monochrome.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
conditions/bichrome$(OBJ_SUFFIX): conditions/bichrome.c conditions/bichrome.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_generator.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h debugging/measure.h \
 output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/pipe.h
conditions/bichrome.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
conditions/edgemover$(OBJ_SUFFIX): conditions/edgemover.c conditions/edgemover.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 conditions/conditions.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_generator.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/pipe.h debugging/assert.h
conditions/edgemover.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
conditions/conditions.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
debugging/assert.h:
conditions/grid$(OBJ_SUFFIX): conditions/grid.c conditions/grid.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_generator.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h debugging/measure.h \
 output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/pipe.h \
 debugging/assert.h
conditions/grid.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
debugging/assert.h:
conditions/patrol$(OBJ_SUFFIX): conditions/patrol.c conditions/patrol.h \
 pieces/pieces.h utilities/boolean.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/pipe.h
conditions/patrol.h:
pieces/pieces.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/pipe.h:
conditions/lortap$(OBJ_SUFFIX): conditions/lortap.c conditions/lortap.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/pipe.h
conditions/lortap.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/pipe.h:
conditions/beamten$(OBJ_SUFFIX): conditions/beamten.c conditions/beamten.h \
 pieces/pieces.h utilities/boolean.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/pipe.h
conditions/beamten.h:
pieces/pieces.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
conditions/provocateurs$(OBJ_SUFFIX): conditions/provocateurs.c \
 conditions/provocateurs.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_generator.h debugging/measure.h \
 output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/pipe.h
conditions/provocateurs.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/pipe.h:
conditions/central$(OBJ_SUFFIX): conditions/central.c conditions/central.h \
 pieces/pieces.h utilities/boolean.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum position/side.h position/side.enum.h \
 position/side.enum output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/pipe.h debugging/assert.h
conditions/central.h:
pieces/pieces.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
debugging/assert.h:
conditions/immune$(OBJ_SUFFIX): conditions/immune.c conditions/immune.h \
 conditions/circe/circe.h pieces/pieces.h utilities/boolean.h \
 position/side.h position/side.enum.h position/side.enum position/board.h \
 utilities/bitmask.h solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum output/mode.h \
 output/mode.enum.h output/mode.enum solving/machinery/dispatch.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h solving/ply.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h stipulation/pipe.h stipulation/move.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h
conditions/immune.h:
conditions/circe/circe.h:
pieces/pieces.h:
utilities/boolean.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/board.h:
utilities/bitmask.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
stipulation/pipe.h:
stipulation/move.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
conditions/woozles$(OBJ_SUFFIX): conditions/woozles.c conditions/woozles.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_generator.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h debugging/measure.h \
 output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h \
 solving/find_square_observer_tracking_back_from_target.h solving/pipe.h \
 debugging/assert.h
conditions/woozles.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/pipe.h:
debugging/assert.h:
conditions/nocapture$(OBJ_SUFFIX): conditions/nocapture.c conditions/nocapture.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 conditions/conditions.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_generator.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/pipe.h
conditions/nocapture.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
conditions/conditions.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
conditions/nopromotion$(OBJ_SUFFIX): conditions/nopromotion.c \
 conditions/nopromotion.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 conditions/conditions.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h \
 solving/move_effect_journal.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 pieces/walks/pawns/promotee_sequence.h position/effects/utils.h \
 solving/pipe.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h
conditions/nopromotion.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
conditions/conditions.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/move_effect_journal.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
pieces/walks/pawns/promotee_sequence.h:
position/effects/utils.h:
solving/pipe.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
conditions/geneva$(OBJ_SUFFIX): conditions/geneva.c conditions/geneva.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 conditions/circe/circe.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_effect_journal.h \
 solving/machinery/twin.h conditions/circe/rebirth_square_occupied.h \
 conditions/circe/reborn_piece.h conditions/circe/rebirth_square.h \
 conditions/circe/relevant_capture.h conditions/circe/relevant_piece.h \
 conditions/circe/relevant_side.h conditions/anticirce/anticirce.h \
 stipulation/pipe.h stipulation/move.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/pipe.h
conditions/geneva.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
conditions/circe/circe.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_effect_journal.h:
solving/machinery/twin.h:
conditions/circe/rebirth_square_occupied.h:
conditions/circe/reborn_piece.h:
conditions/circe/rebirth_square.h:
conditions/circe/relevant_capture.h:
conditions/circe/relevant_piece.h:
conditions/circe/relevant_side.h:
conditions/anticirce/anticirce.h:
stipulation/pipe.h:
stipulation/move.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
conditions/take_and_make$(OBJ_SUFFIX): conditions/take_and_make.c \
 conditions/take_and_make.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 pieces/walks/generate_moves.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h \
 pieces/walks/classification.h pieces/walks/pawns/en_passant.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 solving/ply.h solving/move_effect_journal.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/pipe.h \
 solving/post_move_iteration.h conditions/conditions.h
conditions/take_and_make.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
pieces/walks/generate_moves.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
pieces/walks/classification.h:
pieces/walks/pawns/en_passant.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
solving/move_effect_journal.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/pipe.h:
solving/post_move_iteration.h:
conditions/conditions.h:
conditions/ohneschach$(OBJ_SUFFIX): conditions/ohneschach.c conditions/ohneschach.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/proxy.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/conditional_pipe.h stipulation/branch.h \
 stipulation/slice_insertion.h stipulation/goals/slice_insertion.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/battle_play/branch.h \
 solving/machinery/slack_length.h solving/recursion_stopper.h \
 solving/check.h debugging/measure.h output/plaintext/protocol.h \
 solving/conditional_pipe.h solving/pipe.h debugging/assert.h
conditions/ohneschach.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/proxy.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/conditional_pipe.h:
stipulation/branch.h:
stipulation/slice_insertion.h:
stipulation/goals/slice_insertion.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/battle_play/branch.h:
solving/machinery/slack_length.h:
solving/recursion_stopper.h:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/conditional_pipe.h:
solving/pipe.h:
debugging/assert.h:
conditions/annan$(OBJ_SUFFIX): conditions/annan.c conditions/annan.h \
 conditions/conditions.h position/position.h position/board.h \
 utilities/bitmask.h position/side.h position/side.enum.h \
 position/side.enum position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/pieces.h \
 utilities/boolean.h pieces/walks/vectors.h position/castling_rights.h \
 stipulation/stipulation.h stipulation/goals/goals.h \
 stipulation/slice_type.h stipulation/slice_type.enum.h \
 stipulation/slice_type.enum output/mode.h output/mode.enum.h \
 output/mode.enum solving/observation.h solving/machinery/dispatch.h \
 solving/ply.h debugging/trace.h solving/temporary_hacks.h solving/fork.h \
 solving/machinery/solve.h solving/move_generator.h debugging/measure.h \
 output/plaintext/protocol.h solving/castling.h \
 solving/move_effect_journal.h \
 solving/find_square_observer_tracking_back_from_target.h solving/pipe.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 debugging/assert.h
conditions/annan.h:
conditions/conditions.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/observation.h:
solving/machinery/dispatch.h:
solving/ply.h:
debugging/trace.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/machinery/solve.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/castling.h:
solving/move_effect_journal.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/pipe.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
debugging/assert.h:
conditions/shielded_kings$(OBJ_SUFFIX): conditions/shielded_kings.c \
 conditions/shielded_kings.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum solving/observation.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 position/castling_rights.h solving/temporary_hacks.h solving/fork.h \
 solving/machinery/solve.h solving/move_generator.h debugging/measure.h \
 output/plaintext/protocol.h stipulation/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/pipe.h
conditions/shielded_kings.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/observation.h:
solving/machinery/dispatch.h:
pieces/walks/vectors.h:
solving/ply.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
position/castling_rights.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/machinery/solve.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/pipe.h:
conditions/superguards$(OBJ_SUFFIX): conditions/superguards.c \
 conditions/superguards.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/pipe.h
conditions/superguards.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/pipe.h:
conditions/brunner$(OBJ_SUFFIX): conditions/brunner.c conditions/brunner.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum solving/temporary_hacks.h solving/check.h \
 debugging/measure.h output/plaintext/protocol.h solving/observation.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 position/castling_rights.h solving/fork.h solving/machinery/solve.h \
 solving/move_generator.h solving/conditional_pipe.h solving/pipe.h \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/pipe.h debugging/assert.h
conditions/brunner.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
solving/temporary_hacks.h:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/machinery/dispatch.h:
pieces/walks/vectors.h:
solving/ply.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
position/castling_rights.h:
solving/fork.h:
solving/machinery/solve.h:
solving/move_generator.h:
solving/conditional_pipe.h:
solving/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/pipe.h:
debugging/assert.h:
conditions/wormhole$(OBJ_SUFFIX): conditions/wormhole.c conditions/wormhole.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/branch.h stipulation/move.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h \
 solving/post_move_iteration.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h pieces/walks/pawns/promotion.h \
 solving/move_effect_journal.h stipulation/slice_insertion.h \
 position/effects/piece_readdition.h position/effects/piece_removal.h \
 position/effects/piece_movement.h solving/pipe.h debugging/assert.h
conditions/wormhole.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/branch.h:
stipulation/move.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/post_move_iteration.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
pieces/walks/pawns/promotion.h:
solving/move_effect_journal.h:
stipulation/slice_insertion.h:
position/effects/piece_readdition.h:
position/effects/piece_removal.h:
position/effects/piece_movement.h:
solving/pipe.h:
debugging/assert.h:
conditions/backhome$(OBJ_SUFFIX): conditions/backhome.c conditions/backhome.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum conditions/mummer.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/slice_insertion.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h solving/legal_move_counter.h \
 solving/post_move_iteration.h solving/pipe.h solving/conditional_pipe.h \
 solving/check.h debugging/assert.h
conditions/backhome.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
conditions/mummer.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/slice_insertion.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/legal_move_counter.h:
solving/post_move_iteration.h:
solving/pipe.h:
solving/conditional_pipe.h:
solving/check.h:
debugging/assert.h:
conditions/vogtlaender$(OBJ_SUFFIX): conditions/vogtlaender.c \
 conditions/vogtlaender.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum solving/check.h \
 debugging/measure.h output/plaintext/protocol.h solving/pipe.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h
conditions/vogtlaender.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/bicolores$(OBJ_SUFFIX): conditions/bicolores.c conditions/bicolores.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum solving/observation.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 position/castling_rights.h solving/temporary_hacks.h solving/fork.h \
 solving/machinery/solve.h solving/pipe.h
conditions/bicolores.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/observation.h:
solving/machinery/dispatch.h:
pieces/walks/vectors.h:
solving/ply.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
position/castling_rights.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/machinery/solve.h:
solving/pipe.h:
conditions/antikings$(OBJ_SUFFIX): conditions/antikings.c conditions/antikings.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum solving/check.h \
 debugging/measure.h output/plaintext/protocol.h solving/pipe.h \
 solving/machinery/solve.h solving/machinery/dispatch.h debugging/trace.h \
 position/position.h position/color.h position/color.enum.h \
 position/color.enum position/pieceid.h pieces/walks/vectors.h \
 position/castling_rights.h solving/ply.h
conditions/antikings.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/check.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/follow_my_leader$(OBJ_SUFFIX): conditions/follow_my_leader.c \
 conditions/follow_my_leader.h position/board.h utilities/bitmask.h \
 conditions/mummer.h solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_effect_journal.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h debugging/assert.h
conditions/follow_my_leader.h:
position/board.h:
utilities/bitmask.h:
conditions/mummer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_effect_journal.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
debugging/assert.h:
conditions/alphabetic$(OBJ_SUFFIX): conditions/alphabetic.c conditions/alphabetic.h \
 position/board.h utilities/bitmask.h conditions/mummer.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_generator.h debugging/measure.h \
 output/plaintext/protocol.h debugging/assert.h
conditions/alphabetic.h:
position/board.h:
utilities/bitmask.h:
conditions/mummer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
debugging/assert.h:
conditions/forced_squares$(OBJ_SUFFIX): conditions/forced_squares.c \
 conditions/forced_squares.h position/board.h utilities/bitmask.h \
 conditions/mummer.h solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_generator.h debugging/measure.h \
 output/plaintext/protocol.h debugging/assert.h
conditions/forced_squares.h:
position/board.h:
utilities/bitmask.h:
conditions/mummer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
debugging/assert.h:
conditions/synchronous$(OBJ_SUFFIX): conditions/synchronous.c \
 conditions/synchronous.h conditions/mummer.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h position/effects/piece_movement.h \
 solving/move_effect_journal.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h debugging/assert.h
conditions/synchronous.h:
conditions/mummer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
position/effects/piece_movement.h:
solving/move_effect_journal.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
debugging/assert.h:
conditions/must_capture$(OBJ_SUFFIX): conditions/must_capture.c \
 conditions/must_capture.h position/board.h utilities/bitmask.h \
 conditions/mummer.h solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h solving/move_generator.h debugging/measure.h \
 output/plaintext/protocol.h debugging/assert.h
conditions/must_capture.h:
position/board.h:
utilities/bitmask.h:
conditions/mummer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
debugging/assert.h:
conditions/facetoface$(OBJ_SUFFIX): conditions/facetoface.c conditions/facetoface.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum solving/observation.h \
 solving/machinery/dispatch.h pieces/walks/vectors.h solving/ply.h \
 debugging/trace.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 position/castling_rights.h solving/temporary_hacks.h solving/fork.h \
 solving/machinery/solve.h solving/move_generator.h debugging/measure.h \
 output/plaintext/protocol.h solving/castling.h \
 solving/move_effect_journal.h \
 solving/find_square_observer_tracking_back_from_target.h solving/pipe.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 debugging/assert.h
conditions/facetoface.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/observation.h:
solving/machinery/dispatch.h:
pieces/walks/vectors.h:
solving/ply.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
position/castling_rights.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/machinery/solve.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/castling.h:
solving/move_effect_journal.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/pipe.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
debugging/assert.h:
conditions/snek$(OBJ_SUFFIX): conditions/snek.c conditions/snek.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h pieces/walks/classification.h pieces/walks/walks.h \
 stipulation/move.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/pipe.h position/effects/walk_change.h \
 solving/move_effect_journal.h solving/post_move_iteration.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 debugging/assert.h
conditions/snek.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
pieces/walks/classification.h:
pieces/walks/walks.h:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/pipe.h:
position/effects/walk_change.h:
solving/move_effect_journal.h:
solving/post_move_iteration.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
debugging/assert.h:
conditions/lostpieces$(OBJ_SUFFIX): conditions/lostpieces.c conditions/lostpieces.h \
 position/side.h position/side.enum.h position/side.enum \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/move.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/pipe.h stipulation/goals/mate/reached_tester.h \
 stipulation/conditional_pipe.h stipulation/proxy.h \
 solving/battle_play/threat.h utilities/table.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum solving/pipe.h solving/conditional_pipe.h \
 position/effects/piece_removal.h solving/move_effect_journal.h \
 solving/temporary_hacks.h debugging/assert.h
conditions/lostpieces.h:
position/side.h:
position/side.enum.h:
position/side.enum:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/pipe.h:
stipulation/goals/mate/reached_tester.h:
stipulation/conditional_pipe.h:
stipulation/proxy.h:
solving/battle_play/threat.h:
utilities/table.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
solving/pipe.h:
solving/conditional_pipe.h:
position/effects/piece_removal.h:
solving/move_effect_journal.h:
solving/temporary_hacks.h:
debugging/assert.h:
conditions/partial_paralysis$(OBJ_SUFFIX): conditions/partial_paralysis.c \
 conditions/partial_paralysis.h pieces/pieces.h utilities/boolean.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum output/mode.h \
 output/mode.enum.h output/mode.enum conditions/madrasi.h \
 pieces/walks/generate_moves.h position/position.h position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/walks/vectors.h position/castling_rights.h \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h solving/ply.h \
 debugging/measure.h output/plaintext/protocol.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h \
 solving/find_square_observer_tracking_back_from_target.h solving/pipe.h
conditions/partial_paralysis.h:
pieces/pieces.h:
utilities/boolean.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
conditions/madrasi.h:
pieces/walks/generate_moves.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/pipe.h:
conditions/conditions$(OBJ_SUFFIX): conditions/conditions.c conditions/conditions.h \
 position/position.h position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/side.enum position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/vectors.h \
 position/castling_rights.h
conditions/conditions.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
conditions/breton$(OBJ_SUFFIX): conditions/breton.c conditions/breton.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h position/effects/piece_removal.h \
 solving/move_effect_journal.h position/effects/side_change.h \
 solving/pipe.h solving/post_move_iteration.h solving/observation.h \
 solving/temporary_hacks.h solving/fork.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 debugging/assert.h
conditions/breton.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
position/effects/piece_removal.h:
solving/move_effect_journal.h:
position/effects/side_change.h:
solving/pipe.h:
solving/post_move_iteration.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
debugging/assert.h:
conditions/make_and_take$(OBJ_SUFFIX): conditions/make_and_take.c \
 conditions/make_and_take.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/pipe.h solving/check.h solving/castling.h \
 solving/move_effect_journal.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/pipe.h stipulation/slice_insertion.h stipulation/move.h \
 pieces/walks/classification.h pieces/walks/pawns/en_passant.h \
 position/effects/piece_movement.h debugging/assert.h
conditions/make_and_take.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
solving/check.h:
solving/castling.h:
solving/move_effect_journal.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/pipe.h:
stipulation/slice_insertion.h:
stipulation/move.h:
pieces/walks/classification.h:
pieces/walks/pawns/en_passant.h:
position/effects/piece_movement.h:
debugging/assert.h:
conditions/pointreflection$(OBJ_SUFFIX): conditions/pointreflection.c \
 conditions/pointreflection.h conditions/conditions.h position/position.h \
 position/board.h utilities/bitmask.h position/side.h \
 position/side.enum.h position/side.enum position/color.h \
 position/color.enum.h position/color.enum position/pieceid.h \
 pieces/pieces.h utilities/boolean.h pieces/walks/vectors.h \
 position/castling_rights.h stipulation/stipulation.h \
 stipulation/goals/goals.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum output/mode.h \
 output/mode.enum.h output/mode.enum pieces/walks/classification.h \
 solving/observation.h solving/machinery/dispatch.h solving/ply.h \
 debugging/trace.h solving/temporary_hacks.h solving/fork.h \
 solving/machinery/solve.h solving/castling.h \
 solving/move_effect_journal.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h \
 solving/find_square_observer_tracking_back_from_target.h solving/pipe.h \
 stipulation/pipe.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 debugging/assert.h
conditions/pointreflection.h:
conditions/conditions.h:
position/position.h:
position/board.h:
utilities/bitmask.h:
position/side.h:
position/side.enum.h:
position/side.enum:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/pieces.h:
utilities/boolean.h:
pieces/walks/vectors.h:
position/castling_rights.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
pieces/walks/classification.h:
solving/observation.h:
solving/machinery/dispatch.h:
solving/ply.h:
debugging/trace.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/machinery/solve.h:
solving/castling.h:
solving/move_effect_journal.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/pipe.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
debugging/assert.h:
conditions/bolero$(OBJ_SUFFIX): conditions/bolero.c conditions/bolero.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/pipe.h stipulation/slice_insertion.h \
 solving/move_generator.h solving/machinery/solve.h \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h debugging/measure.h output/plaintext/protocol.h \
 solving/pipe.h solving/find_square_observer_tracking_back_from_target.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 pieces/walks/classification.h debugging/assert.h
conditions/bolero.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/pipe.h:
stipulation/slice_insertion.h:
solving/move_generator.h:
solving/machinery/solve.h:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
solving/find_square_observer_tracking_back_from_target.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
pieces/walks/classification.h:
debugging/assert.h:
conditions/influencer$(OBJ_SUFFIX): conditions/influencer.c conditions/influencer.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h position/effects/walk_change.h \
 solving/move_effect_journal.h pieces/walks/pawns/promotion.h \
 stipulation/slice_insertion.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 position/effects/utils.h stipulation/move.h solving/pipe.h \
 debugging/assert.h
conditions/influencer.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
position/effects/walk_change.h:
solving/move_effect_journal.h:
pieces/walks/pawns/promotion.h:
stipulation/slice_insertion.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
position/effects/utils.h:
stipulation/move.h:
solving/pipe.h:
debugging/assert.h:
conditions/role_exchange$(OBJ_SUFFIX): conditions/role_exchange.c \
 conditions/role_exchange.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h position/effects/piece_removal.h \
 solving/move_effect_journal.h position/effects/total_side_exchange.h \
 position/effects/null_move.h position/effects/board_transformation.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 solving/pipe.h solving/fork.h solving/observation.h \
 solving/temporary_hacks.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/proxy.h stipulation/pipe.h stipulation/fork.h \
 stipulation/branch.h stipulation/slice_insertion.h stipulation/move.h \
 debugging/assert.h
conditions/role_exchange.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
position/effects/piece_removal.h:
solving/move_effect_journal.h:
position/effects/total_side_exchange.h:
position/effects/null_move.h:
position/effects/board_transformation.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/pipe.h:
solving/fork.h:
solving/observation.h:
solving/temporary_hacks.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/proxy.h:
stipulation/pipe.h:
stipulation/fork.h:
stipulation/branch.h:
stipulation/slice_insertion.h:
stipulation/move.h:
debugging/assert.h:
conditions/dister$(OBJ_SUFFIX): conditions/dister.c conditions/dister.h \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h conditions/mummer.h position/move_diff_code.h \
 solving/move_generator.h debugging/measure.h output/plaintext/protocol.h \
 debugging/assert.h
conditions/dister.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
conditions/mummer.h:
position/move_diff_code.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
debugging/assert.h:
conditions/series_capture$(OBJ_SUFFIX): conditions/series_capture.c \
 conditions/series_capture.h solving/machinery/solve.h \
 stipulation/stipulation.h stipulation/goals/goals.h position/board.h \
 utilities/bitmask.h utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 position/side.h position/side.enum.h position/side.enum pieces/pieces.h \
 output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h position/effects/piece_removal.h \
 solving/move_effect_journal.h position/effects/piece_movement.h \
 position/effects/utils.h solving/has_solution_type.h \
 solving/has_solution_type.enum.h solving/has_solution_type.enum \
 stipulation/move.h stipulation/structure_traversal.h stipulation/slice.h \
 stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 stipulation/pipe.h stipulation/fork.h stipulation/proxy.h \
 stipulation/slice_insertion.h solving/post_move_iteration.h \
 solving/observation.h solving/temporary_hacks.h solving/fork.h \
 solving/pipe.h solving/binary.h solving/move_generator.h \
 debugging/measure.h output/plaintext/protocol.h solving/check.h \
 debugging/assert.h
conditions/series_capture.h:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
position/side.h:
position/side.enum.h:
position/side.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
position/effects/piece_removal.h:
solving/move_effect_journal.h:
position/effects/piece_movement.h:
position/effects/utils.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
stipulation/pipe.h:
stipulation/fork.h:
stipulation/proxy.h:
stipulation/slice_insertion.h:
solving/post_move_iteration.h:
solving/observation.h:
solving/temporary_hacks.h:
solving/fork.h:
solving/pipe.h:
solving/binary.h:
solving/move_generator.h:
debugging/measure.h:
output/plaintext/protocol.h:
solving/check.h:
debugging/assert.h:
conditions/darkside$(OBJ_SUFFIX): conditions/darkside.c conditions/darkside.h \
 position/side.h position/side.enum.h position/side.enum \
 solving/machinery/solve.h stipulation/stipulation.h \
 stipulation/goals/goals.h position/board.h utilities/bitmask.h \
 utilities/boolean.h stipulation/slice_type.h \
 stipulation/slice_type.enum.h stipulation/slice_type.enum \
 pieces/pieces.h output/mode.h output/mode.enum.h output/mode.enum \
 solving/machinery/dispatch.h debugging/trace.h position/position.h \
 position/color.h position/color.enum.h position/color.enum \
 position/pieceid.h pieces/walks/vectors.h position/castling_rights.h \
 solving/ply.h stipulation/pipe.h stipulation/structure_traversal.h \
 stipulation/slice.h stipulation/slice_structural_type.h \
 stipulation/slice_structural_type.enum.h \
 stipulation/slice_structural_type.enum \
 stipulation/slice_functional_type.h \
 stipulation/slice_functional_type.enum.h \
 stipulation/slice_functional_type.enum \
 stipulation/slice_contextual_type.h \
 stipulation/slice_contextual_type.enum.h \
 stipulation/slice_contextual_type.enum stipulation/traversal.h \
 solving/has_solution_type.h solving/has_solution_type.enum.h \
 solving/has_solution_type.enum stipulation/move.h \
 position/effects/side_change.h solving/move_effect_journal.h \
 position/effects/utils.h solving/pipe.h debugging/assert.h
conditions/darkside.h:
position/side.h:
position/side.enum.h:
position/side.enum:
solving/machinery/solve.h:
stipulation/stipulation.h:
stipulation/goals/goals.h:
position/board.h:
utilities/bitmask.h:
utilities/boolean.h:
stipulation/slice_type.h:
stipulation/slice_type.enum.h:
stipulation/slice_type.enum:
pieces/pieces.h:
output/mode.h:
output/mode.enum.h:
output/mode.enum:
solving/machinery/dispatch.h:
debugging/trace.h:
position/position.h:
position/color.h:
position/color.enum.h:
position/color.enum:
position/pieceid.h:
pieces/walks/vectors.h:
position/castling_rights.h:
solving/ply.h:
stipulation/pipe.h:
stipulation/structure_traversal.h:
stipulation/slice.h:
stipulation/slice_structural_type.h:
stipulation/slice_structural_type.enum.h:
stipulation/slice_structural_type.enum:
stipulation/slice_functional_type.h:
stipulation/slice_functional_type.enum.h:
stipulation/slice_functional_type.enum:
stipulation/slice_contextual_type.h:
stipulation/slice_contextual_type.enum.h:
stipulation/slice_contextual_type.enum:
stipulation/traversal.h:
solving/has_solution_type.h:
solving/has_solution_type.enum.h:
solving/has_solution_type.enum:
stipulation/move.h:
position/effects/side_change.h:
solving/move_effect_journal.h:
position/effects/utils.h:
solving/pipe.h:
debugging/assert.h:
