# -*- Makefile -*-
#

# Include file for makefile.unx for compiling on a Unix-ish platform
# (including MacOS X) for that same platform using the Gnu Compiler
# collection's C compiler.
# I.e. host platform is equal to target platform.

# Requirements:
#
# The following tools can be used to produce executables for the host
# and target plarform and can be found in the $PATH
# - gcc
# - ar
# - ranlib
# - strip


# Compiler selection
# ==================

# Compiler for creating executables on host
CCHOST=gcc

# Linker for creating executables on host
LDHOST=gcc

# Compiler for creating executables on target
CCTARGET=gcc

# Linker for creating executables on target
LDTARGET=gcc

# Strip utility to remove unnecessary symbols from executable
STRIPTARGET=strip


# Librarian
# ---------

# A library is called archive on Unix-ish platforms

# Archive generator
ARCHIVER = ar rv

# Archive index generator
ARCHIVE_INDEXER = ranlib


# Compiler options
# ================

# Select warning level
ifeq ($(TOOLCHAIN), gcc)
WARN=\
  -W \
  -Wall \
  -Wextra \
  -Wpedantic -pedantic-errors \
  -Walloc-zero -Walloca \
  -Warray-bounds=2 \
  -Wcast-align -Wconversion -Wbad-function-cast -Wno-cast-qual \
  -Wduplicated-branches -Wduplicated-cond \
  -Wfloat-equal \
  -Wformat=2 -Wformat-overflow=2 -Wformat-signedness -Wformat-truncation=2 -Wno-format-nonliteral -Wno-format-signedness \
  -Winvalid-pch \
  -Wlogical-op \
  -Wmissing-declarations -Wredundant-decls -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs \
  -Wold-style-definition \
  -Wshift-negative-value -Wshift-overflow=2 \
  -Wswitch -Wswitch-default \
  -Wsync-nand \
  -Wundef \
  -Wunknown-pragmas \
  -Wno-unused-parameter \
  -Winit-self \
  -Wwrite-strings \
  -Wjump-misses-init
else
WARN=\
  -W \
  -Wall \
  -Wextra \
  -Wpedantic -pedantic-errors \
  -Warray-bounds \
  -Wcast-align -Wconversion -Wbad-function-cast -Wno-cast-qual \
  -Wfloat-equal \
  -Wformat=2 -Wno-format-nonliteral \
  -Winvalid-pch \
  -Wmissing-declarations -Wredundant-decls -Wstrict-prototypes -Wmissing-prototypes -Wnested-externs \
  -Wold-style-definition \
  -Wshift-negative-value -Wshift-overflow \
  -Wswitch -Wswitch-default \
  -Wundef \
  -Wunknown-pragmas \
  -Wno-unused-parameter \
  -Winit-self \
  -Wwrite-strings
endif

# We may consider (re-)activating the following warnings in the future:
#   warning: unused parameter ‘abc’ [-Wunused-parameter]
#     1. this is misleading for functions whose address is taken
#     2. gcc tells us "To suppress this warning use the unused attribute" but this
#        will require us to introduce a scaffolding around the peculiarities of different
#        C implementations.
#
#   declaration of ‘abc’ shadows a global declaration [-Wshadow]
#     if this is a problem, the scope containing the declaration is probably too long
#
#   warning: cast discards ‘const’ qualifier from pointer target type [-Wcast-qual]
#     I haven't found a way to cast a void const * to a "pointer to array of 2 char const"
#       without a false positive warning.
#     This warning should be activated if someone finds such a way.

# The following warnings are deactivated for good:
#   warning: format not a string literal, argument types not checked [-Wformat-nonliteral]
#   warning: field width specifier ‘*’ expects argument of type ‘int’, but argument 3 has type ‘unsigned int’ [-Wformat=]
#     unfortunately, -Wno-format-signedness also disables the opposite warning
#   warning: assuming signed overflow does not occur when simplifying conditional to constant [-Wstrict-overflow]
#     impossible to understand, and the docs say: "this warning can easily give a false positive
#   warning: potential null pointer dereference [-Wnull-dereference]
#     too many false positives

# Select whether to produce an executable with debugging and profiling
# info
#DBG=-pg
#DBG=-g
DBG=

# Indicate target architecture to compiler
#ARCH=-m64		# force 64 bit environment
#ARCH=-m32              # force 32 bit environment
ARCH=                   # use platform default

# Select target compiler optimization level
CCOPTIM=-O3
# -fprofile-use
# -fprofile-generate
# -flto

# Option for producing dependency information in makefile format
DEPEND=-MM -MP

# Option for compiling only
COMPILEONLY=-c

# Option for naming object file
# NOTE: the trailing blank on the following line is relevant (at least
# when compiling on MacOsX)
OBJFILE=-o 

# Option for defining a C preprocessor macro
DEFINEMACRO=-D

# Compile according to the ISO C 1999 Standard (which supports long long)
OTHER+=-std=c99


# Linker options
# ==============

# Select target linker optimization level
LDOPTIM=-O3
# -fprofile-use
# -fprofile-generate

# Option for naming objectfile
# NOTE: the trailing blank on the following line is relevant (at least
# when compiling on MacOsX)
EXEFILE=-o 


# Platform-specific file name suffixes
# ====================================

# suffix for objects
OBJ_SUFFIX=.o

# suffix for libraries
LIB_SUFFIX=lib.a

# suffix for executables
EXE_SUFFIX=


# Selector for platform-specific files
# ====================================

PLATFORM=unix
